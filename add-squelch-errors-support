ext4: add option for squelching ext4 errors to prevent dmesg from filling up

Only print one error per inode; this is enough to know that something
is wrong with an inode, without filling dmesg by spamming the system
with messages over and over again.

This is enabled via sysfs option, which is currently off by default.
Some environments may want to turn this on by default.  Eventually we
may want to make this be something which is tunable by a superblock
flag, perhaps.

Addresses-Google-Bug: #2507977

Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
---
 fs/ext4/ext4.h  | 2 ++
 fs/ext4/super.c | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/fs/ext4/ext4.h b/fs/ext4/ext4.h
index cfc4e01..af4d698 100644
--- a/fs/ext4/ext4.h
+++ b/fs/ext4/ext4.h
@@ -1146,6 +1146,7 @@ struct ext4_super_block {
  */
 #define EXT4_MF_MNTDIR_SAMPLED	0x0001
 #define EXT4_MF_FS_ABORTED	0x0002	/* Fatal error detected */
+#define EXT4_MF_FS_SQUELCH	0x0004	/* Squelch file system errors */
 
 /*
  * fourth extended-fs super-block data in memory
@@ -1342,6 +1343,7 @@ enum {
 	EXT4_STATE_DIO_UNWRITTEN,	/* need convert on dio done*/
 	EXT4_STATE_NEWENTRY,		/* File just added to dir */
 	EXT4_STATE_DELALLOC_RESERVED,	/* blks already reserved for delalloc */
+	EXT4_STATE_ERR_SQUELCHED,	/* squeched error */
 };
 
 #define EXT4_INODE_BIT_FNS(name, field, offset)				\
diff --git a/fs/ext4/super.c b/fs/ext4/super.c
index 0396ad0..5aaa253 100644
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -2567,6 +2567,7 @@ EXT4_RW_ATTR_SBI_UI(mb_stream_req, s_mb_stream_request);
 EXT4_RW_ATTR_SBI_UI(mb_group_prealloc, s_mb_group_prealloc);
 EXT4_RW_ATTR_SBI_UI(max_writeback_mb_bump, s_max_writeback_mb_bump);
 EXT4_ATTR(trigger_fs_error, 0200, NULL, trigger_test_error);
+EXT4_RW_ATTR_SBI_BOOL(squelch_errors, s_mount_flags, EXT4_MF_FS_SQUELCH);
 
 static struct attribute *ext4_attrs[] = {
 	ATTR_LIST(delayed_allocation_blocks),
@@ -2582,6 +2583,7 @@ static struct attribute *ext4_attrs[] = {
 	ATTR_LIST(mb_group_prealloc),
 	ATTR_LIST(max_writeback_mb_bump),
 	ATTR_LIST(trigger_fs_error),
+	ATTR_LIST(squelch_errors),
 	NULL,
 };
 
